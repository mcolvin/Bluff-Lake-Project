)
# Some references and examples.
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-11-30", done = 0)
h <- ganttAddTask(h, "2020 Fish Sampling", "2020-3-01", "2019-3-28", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-11-30", done = 0)
h <- ganttAddTask(h, "2020 Fish Sampling", "2020-3-01", "2019-3-28", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-3-30", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-3-30", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
heck for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-2-28", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2019-02-28", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2020-02-25", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
# Check for plan package, install if not currently, and load from library.
if (!require(plan)){
install.packages("plan")
library("plan")
}
# Create a new gantt chart within a named object.
h <- new("gantt")
# Add tasks; the first can be used as a title.
h <- ganttAddTask(h,  # named gantt object
"Bluff Lake 2020")  # title of task (title for first line)
h <- ganttAddTask(h, "2019 Bathymetric Mapping", "2019-01-01", "2019-03-01", done = 100)
h <- ganttAddTask(h, "2019 Creel", "2019-03-01", "2019-10-31", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-05-01", "2019-05-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-7-01", "2019-7-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-9-01", "2019-9-07", done = 100)
h <- ganttAddTask(h, "2019 Logger Deployment", "2019-11-01", "2019-11-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-01-07", "2020-01-14", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-03-01", "2020-03-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-05-01", "2020-05-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-07-01", "2020-07-07", done = 0)
h <- ganttAddTask(h, "2020 Logger Deployment", "2020-09-01", "2020-09-07", done = 0)
h <- ganttAddTask(h, "2020 Bathymetric Mapping", "2020-01-10", "2020-03-01", done = 0)
h <- ganttAddTask(h, "2020 Creel", "2020-03-01", "2020-10-31", done = 0)
h <- ganttAddTask(h, "2019 Fish Sampling", "2019-11-01", "2020-03-30", done = 0)
h <- ganttAddTask(h, "2020 Water Quality Sampling", "2019-11-01", "2020-10-31", done = 0)
# Use tiff function to write plot to file.
# tiff(filename = "ganttProject.tiff",
#      width = 750, height = 500, pointsize = 12)
par(lend = "square")
# default is round
#mar = c(5, 4, 5, 1),
#oma = c(1, 1, 2, 1))
plot(
h,
ylabel = list(font = ifelse(is.na(h[["start"]]), 2, 1)),  # task labels on y-axis
event.time = Sys.Date(),  # vertical line for current day
event.label = "Today"  # label for current day line
)
legend(
"topright",  # where to place legend
legend = c("Completed", "Not complete"),  # legend labels
pch = 22,  # shape
pt.cex = 2,  # point size
pt.bg = gray(c(0.3, 0.9)),  # point background color
bty = "n",  # include legend box
# xpd = TRUE, # optional; legend can go outside chart
inset = c(0, 0)  # legend position adjustment
)
# dev.off()  # to close graphic device and write to
# Some references and examples.
# https://cran.r-project.org/web/packages/plan/plan.pdf
# https://cran.r-project.org/web/packages/plan/vignettes/plan.html
# http://dankelley.github.io/plan/examples.html
setwd("~/GitHub/Bluff-Lake-Project/_analysis/Fish")
download.packages(vegan)
install.packages("vegan")
install.packages("permute")
install.packages("lattice")
data(BCI)
data(BCI.env)
(raremax <- min(4,9,1))
S <- 14 # observed number of species
(raremax <- min(4,9,1))
spec_occ<-(4,9,1)
Srare <- rarefy(spes_occ, raremax)
install.packages("vegan")
load("rarefy")
Srare <- rarefy(spes_occ, raremax)
library("vegan")
Srare <- rarefy(spes_occ, raremax)
Srare <- rarefy(spec_occ, raremax)
S <- 14 # observed number of species
spec_occ<-(4,9,1)
spec_occ<-c(4,9,1)
(raremax <- min(4,9,1))
Srare <- rarefy(spec_occ, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
(raremax <- min(4,9,1))
Srare <- rarefy(spec_occ, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(spec_occ, step = 20, sample = raremax, col = "blue", cex = 0.6)
spec_occ<-c(4,13,14)
(raremax <- min(4,13,14))
Srare <- rarefy(spec_occ, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(spec_occ, step = 20, sample = raremax, col = "blue", cex = 0.6)
x<- c(4,13,14)
sample<-3
rarefy(x, sample, se = FALSE, MARGIN = 1)
rrarefy(x, sample)
drarefy(x, sample)
rarecurve(x, step = 1, sample, xlab = "Sample Size", ylab = "Species",
label = TRUE, col, lty, ...)
rarecurve(x, step = 1, sample, xlab = "Sample Size", ylab = "Species",
label = TRUE, col, lty)
x<- c(4,13,14)
sample<-3
rarefy(x, sample, se = FALSE, MARGIN = 1)
rrarefy(x, sample)
drarefy(x, sample)
rarecurve(x, step = 1, sample, xlab = "Sample Size", ylab = "Species",
label = TRUE, col, lty)
rareslope(x, sample)
rarecurve(x, step = 1, sample, xlab = "Sample Size", ylab = "Species",
label = TRUE)
rareslope(x, sample)
x<- c(4,13,14)
sample<-3
rarefy(x, sample, se = FALSE, MARGIN = 1)
rrarefy(x, sample)
drarefy(x, sample)
rarecurve(x, step = 1, sample, xlab = "Sample Size", ylab = "Species",
label = TRUE)
rareslope(x, sample)
library(vegan)
data(BCI)
View(BCI)
data("/SPP.csv")
data("SPP.csv")
spp<-read.csv("SPP.csv")
data(spp)
spp<-read.csv("SPP.csv")
spp
S <- specnumber(spp) # observed number of species
(raremax <- min(rowSums(spp)))
Srare <- rarefy(spp, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
data(spp)
sp1 <- specaccum(spp)
sp2 <- specaccum(spp, "random")
sp2
summary(sp2)
plot(sp1, ci.type="poly", col="blue", lwd=2, ci.lty=0, ci.col="lightblue")
boxplot(sp2, col="yellow", add=TRUE, pch="+")
## Fit Lomolino model to the exact accumulation
mod1 <- fitspecaccum(sp1, "lomolino")
coef(mod1)
fitted(mod1)
sp1 <- specaccum(spp)
sp1
data(BCI)
sp1 <- specaccum(BCI)
sp1
BCI
View(BCI)
BCI
data(BCI)
sp1 <- specaccum(BCI)
sp2 <- specaccum(BCI, "random")
sp2
summary(sp2)
plot(sp1, ci.type="poly", col="blue", lwd=2, ci.lty=0, ci.col="lightblue")
boxplot(sp2, col="yellow", add=TRUE, pch="+")
data(spp)
sp1 <- specaccum(spp)
sp2 <- specaccum(spp, "random")
sp2
summary(sp2)
plot(sp1, ci.type="poly", col="blue", lwd=2, ci.lty=0, ci.col="lightblue")
boxplot(sp2, col="yellow", add=TRUE, pch="+")
## Fit Lomolino model to the exact accumulation
mod1 <- fitspecaccum(sp1, "lomolino")
coef(mod1)
fitted(mod1)
plot(sp1)
## Add Lomolino model using argument 'add'
plot(mod1, add = TRUE, col=2, lwd=2)
## Fit Arrhenius models to all random accumulations
mods <- fitspecaccum(sp2, "arrh")
plot(mods, col="hotpink")
boxplot(sp2, col = "yellow", border = "blue", lty=1, cex=0.3, add= TRUE)
## Use nls() methods to the list of models
sapply(mods$models, AIC)
